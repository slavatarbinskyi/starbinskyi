@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "UserChat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



	<style>
		body {
			margin-top: 0px;
		}
		.hidden {
			display: none;
		}

		.chat-dialog {
			width: 900px;
			min-height: 600px;
			border: 3px solid #ccc;
			border-radius: 10px;
			margin: 20px;
			padding: 10px;
		}

		.msg-controls {
			margin-left: 20px;
		}

		.my-messages {
			text-align: right;
		}
	</style>
<div>
	<span style="font-size: 50px;">User Chat</span>
	<div class="chat-box">
		<div class="chat-dialog">

		</div>
		<div class="msg-controls">
			<input type="text" id="Message" placeholder="Enter your message"/>
			<button id="SendMessage">Send</button>
		</div>
	</div>
</div>

	<script>
		// Global variables without any specified type (type will be determined when used in the functions below).
		var obj, x, y, prev_x, prev_y, myName;
		var socketWorker = new socketWorker();



		function socketWorker() {
			var self = this;
			self.ws = null;

			self.init = function (name)
			{
				var localhost = "CH976";
				var socketProtocol = window.location.protocol == "https:" ? "wss" : "ws";
				var socketUrl = socketProtocol + '://' + localhost + ':' + 8002;
				var connection = new WebSocket(socketUrl, "123456");
				// connection.binaryType = "arraybuffer";

				// When the connection is open, send data to the server
				connection.onopen = function () {
					connection.send("Name: " + name);
				};

				connection.onerror = function (error, data) {
					console.log('WebSocket Error ' + error);
				};

				connection.onmessage = function (e) {
					if (typeof e.data == "string") {
						$('.chat-dialog').append(e.data);
					}
					else {
						var k = e.data;
					}
				};

				connection.onclose = function (event) {
					var reason;
					var errorMSG = true;
					// See http://tools.ietf.org/html/rfc6455#section-7.4.1
				};
				self.ws = connection;
			}

			self.updateClients = function (msg) {
				self.ws.send(msg);
			}
		}

		$(document).ready(function () {
			var name = "@User.Identity.GetUserName().Split('@')[0]";
			myName = name;
			socketWorker.init(name);
			$("#SendMessage").click(function () {
				var msg = $("#Message").val();
				var photo = $("<div />").append($(".profilephoto:first").clone()).html();
				socketWorker.updateClients("msg: " + msg);
				$(".chat-dialog").append("<div class='my-messages'>" + photo + "<strong>" + myName + "</strong><span>  " + msg + "</span><div>");
				$("#Message").val('');
				photo = null;
			});
			$('#Message').bind("enterKey", function (e) {
				var msg = $("#Message").val();
				var photo = $(".profilephoto");
				socketWorker.updateClients("msg: " + msg);
				$(".chat-dialog").append("<div class='my-messages'>"+photo+"<strong>" + myName + "</strong><span>  " + msg + "</span><div>");
				$("#Message").val('');
			});
		});

	</script>
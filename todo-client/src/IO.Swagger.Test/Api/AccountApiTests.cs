/* 
 * WebApp
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AccountApiTests
    {
        private AccountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccountApi
            //Assert.IsInstanceOfType(typeof(AccountApi), instance, "instance is a AccountApi");
        }

        
        /// <summary>
        /// Test AccountAddExternalLogin
        /// </summary>
        [Test]
        public void AccountAddExternalLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddExternalLoginBindingModel model = null;
            //var response = instance.AccountAddExternalLogin(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountChangePassword
        /// </summary>
        [Test]
        public void AccountChangePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePasswordBindingModel model = null;
            //var response = instance.AccountChangePassword(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountGetExternalLogin
        /// </summary>
        [Test]
        public void AccountGetExternalLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string provider = null;
            //string error = null;
            //var response = instance.AccountGetExternalLogin(provider, error);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountGetExternalLogins
        /// </summary>
        [Test]
        public void AccountGetExternalLoginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string returnUrl = null;
            //bool? generateState = null;
            //var response = instance.AccountGetExternalLogins(returnUrl, generateState);
            //Assert.IsInstanceOf<List<ExternalLoginViewModel>> (response, "response is List<ExternalLoginViewModel>");
        }
        
        /// <summary>
        /// Test AccountGetManageInfo
        /// </summary>
        [Test]
        public void AccountGetManageInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string returnUrl = null;
            //bool? generateState = null;
            //var response = instance.AccountGetManageInfo(returnUrl, generateState);
            //Assert.IsInstanceOf<ManageInfoViewModel> (response, "response is ManageInfoViewModel");
        }
        
        /// <summary>
        /// Test AccountGetUserInfo
        /// </summary>
        [Test]
        public void AccountGetUserInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AccountGetUserInfo();
            //Assert.IsInstanceOf<UserInfoViewModel> (response, "response is UserInfoViewModel");
        }
        
        /// <summary>
        /// Test AccountLogout
        /// </summary>
        [Test]
        public void AccountLogoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AccountLogout();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountRegister
        /// </summary>
        [Test]
        public void AccountRegisterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterBindingModel model = null;
            //var response = instance.AccountRegister(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountRegisterExternal
        /// </summary>
        [Test]
        public void AccountRegisterExternalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RegisterExternalBindingModel model = null;
            //var response = instance.AccountRegisterExternal(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountRemoveLogin
        /// </summary>
        [Test]
        public void AccountRemoveLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RemoveLoginBindingModel model = null;
            //var response = instance.AccountRemoveLogin(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountSetPassword
        /// </summary>
        [Test]
        public void AccountSetPasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetPasswordBindingModel model = null;
            //var response = instance.AccountSetPassword(model);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
    }

}
